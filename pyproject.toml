[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=77",
  "setuptools-scm[toml]>=6.2",
]

[project]
name = "pytest-asyncio"
description = "Pytest support for asyncio"
readme.content-type = "text/x-rst"
readme.file = "README.rst"
license = "Apache-2.0"
license-files = [
  "LICENSE",
]
authors = [
  { name = "Tin TvrtkoviÄ‡ <tinchester@gmail.com>", email = "tinchester@gmail.com" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: AsyncIO",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Testing",
  "Typing :: Typed",
]
dynamic = [
  "version",
]

dependencies = [
  "pytest>=8.2,<9",
  "typing-extensions>=4.12; python_version<'3.10'",
]
optional-dependencies.docs = [
  "sphinx>=5.3",
  "sphinx-rtd-theme>=1",
]
optional-dependencies.testing = [
  "coverage>=6.2",
  "hypothesis>=5.7.1",
]
urls."Bug Tracker" = "https://github.com/pytest-dev/pytest-asyncio/issues"
urls.Changelog = "https://pytest-asyncio.readthedocs.io/en/latest/reference/changelog.html"
urls.Documentation = "https://pytest-asyncio.readthedocs.io"
urls.Homepage = "https://github.com/pytest-dev/pytest-asyncio"
urls."Source Code" = "https://github.com/pytest-dev/pytest-asyncio"
entry-points.pytest11.asyncio = "pytest_asyncio.plugin"

[tool.setuptools]
packages = [
  "pytest_asyncio",
]
include-package-data = true

[tool.setuptools_scm]
write_to = "pytest_asyncio/_version.py"

[tool.ruff]
line-length = 88
format.docstring-code-format = true
lint.select = [
  "B",      # bugbear
  "D",      # pydocstyle
  "E",      # pycodestyle
  "F",      # pyflakes
  "FA100",  # add future annotations
  "PGH004", # pygrep-hooks - Use specific rule codes when using noqa
  "PIE",    # flake8-pie
  "PLE",    # pylint error
  "PYI",    # flake8-pyi
  "RUF",    # ruff
  "T100",   # flake8-debugger
  "UP",     # pyupgrade
  "W",      # pycodestyle
]

lint.ignore = [
  # bugbear ignore
  "B028", # No explicit `stacklevel` keyword argument found
  # pydocstyle ignore
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D106", # Missing docstring in public nested class
  "D107", # Missing docstring in `__init__`
  "D203", # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D205", # 1 blank line required between summary line and description
  "D209", # [*] Multi-line docstring closing quotes should be on a separate line
  "D212", # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible.
  "D400", # First line should end with a period
  "D401", # First line of docstring should be in imperative mood
  "D402", # First line should not be the function's signature
  "D404", # First word of the docstring should not be "This"
  "D415", # First line should end with a period, question mark, or exclamation point
]

[tool.pytest.ini_options]
python_files = [
  "test_*.py",
  "*_example.py",
]
addopts = "-rsx --tb=short"
testpaths = [
  "docs",
  "tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
junit_family = "xunit2"
filterwarnings = [
  "error",
  "ignore:The event_loop fixture provided by pytest-asyncio has been redefined.*:DeprecationWarning",
]

[tool.coverage.run]
source = [
  "pytest_asyncio",
]
branch = true
data_file = "coverage/coverage"
omit = [
  "*/_version.py",
]
parallel = true

[tool.coverage.report]
show_missing = true
